#!/usr/bin/env bash

SCRIPT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

ROOT=$SCRIPT/../..
UAA_IMAGE_TAG=${UAA_IMAGE_TAG:-75.21.0}
UAA_IMAGE_NAME=${UAA_IMAGE_NAME:-cloudfoundry/uaa}
CONF_DIR=${ROOT}/conf/uaa
CERTS_DIR=${CONF_DIR}/certs

function generate-ca-server-client-kpi {
  DIR=$1

  if [ -d "$DIR" ]; then
    echo "SSL Certificates for uaa already present under $DIR. Skip SSL generation"
    return
  fi

  if [ ! -d "$ROOT/tls-gen" ]; then
    git clone https://github.com/michaelklishin/tls-gen $ROOT/tls-gen
  fi

  echo "Generating CA and Server PKI for uaa under $DIR ..."
  mkdir -p $DIR

  CUR_DIR=$(pwd)
  cd $ROOT/tls-gen/basic
  make CN=uaa PASSWORD=foobar
  #make
  make verify
  make info
  cd $CUR_DIR
}

function generate-tls-certs-if-required {
  if [[ ! -d "${CERTS_DIR}" ]]; then
    generate-ca-server-client-kpi $CERTS_DIR
    cp $ROOT/tls-gen/basic/testca/cacert.pem $CERTS_DIR
    cp $ROOT/tls-gen/basic/server_uaa/key.pem $CERTS_DIR
    cp $ROOT/tls-gen/basic/server_uaa/cert.pem $CERTS_DIR
	cp $ROOT/tls-gen/basic/server_uaa/keycert.p12 $CERTS_DIR
	keytool -importkeystore \
			-destkeystore ${CERTS_DIR}/uaa.jks \
			-srckeystore ${CERTS_DIR}/keycert.p12 \
			-deststoretype pkcs12 \
			-srcstoretype pkcs12 \
            -alias 1 \
			-destalias uaa-tls \
			-deststorepass foobar \
			-destkeypass foobar \
			-srcstorepass foobar \
			-srckeypass foobar \
			-noprompt
  fi
}

function deploy {
	echo "Running ${UAA_IMAGE_NAME}:${UAA_IMAGE_TAG} docker image with .."
	docker network inspect rabbitmq_net >/dev/null 2>&1 || docker network create rabbitmq_net
	docker rm -f uaa 2>/dev/null || echo "uaa was not running"

	docker run \
		--detach \
    	--name uaa \
		--net rabbitmq_net \
		--publish 8080:8080 \
		--publish 8443:8443 \
		-v ${CONF_DIR}:/uaa \
		-v ${CONF_DIR}/server.xml:/layers/paketo-buildpacks_apache-tomcat/catalina-base/conf/server.xml \
		--env UAA_CONFIG_PATH="/uaa" \
		--env JAVA_OPTS="-Djava.security.policy=unlimited -Djava.security.egd=file:/dev/./urandom" \
    	"${UAA_IMAGE_NAME}:${UAA_IMAGE_TAG}"
}
generate-tls-certs-if-required
deploy
