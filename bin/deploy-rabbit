#!/usr/bin/env bash

#set -x

SCRIPT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $SCRIPT/common

MODE=${MODE:-uaa}
OAUTH_PROVIDER=${OAUTH_PROVIDER:-$MODE}
ADVANCED=${ADVANCED:-advanced.config}
IMAGE_TAG=${IMAGE_TAG:-main}
IMAGE=${IMAGE:-pivotalrabbitmq/rabbitmq}

CONF_DIR=$SCRIPT/../conf/${MODE}

function generate-ca-server-client-kpi {
  NAME=$1

  if [ -d "$NAME" ]; then
    echo "SSL Certificates already present under $NAME. Skip SSL generation"
    return
  fi

  if [ ! -d "$SCRIPT/tls-gen" ]; then
    git clone https://github.com/michaelklishin/tls-gen $SCRIPT/tls-gen
  fi

  echo "Generating CA and Server PKI under $NAME ..."
  mkdir -p $NAME
  cp -r $SCRIPT/tls-gen/* $NAME

  CUR_DIR=$(pwd)
  cd $NAME/basic
  make CN=localhost
  #make PASSWORD=$PASSWORD
  make verify
  make info
  cd $CUR_DIR
}

function deploy {
  USED_CONFIG=""
  CERTS_DIR=${CONF_DIR}/certs
  if [[ -f "${CONF_DIR}/requires-tls" && ! -f "${CERTS_DIR}" ]]; then
    generate-ca-server-client-kpi $CERTS_DIR
    cp $CERTS_DIR/basic/testca/cacert.pem $CERTS_DIR
    cp $CERTS_DIR/basic/server_localhost/key.pem $CERTS_DIR
    cp $CERTS_DIR/basic/server_localhost/cert.pem $CERTS_DIR
    EXTRA_PORTS="-p 15671:15671 "
  fi
  EXTRA_MOUNTS="-v ${SCRIPT}/../conf/enabled_plugins:/etc/rabbitmq/enabled_plugins "
  EXTRA_MOUNTS="${EXTRA_MOUNTS} -v ${CONF_DIR}:/conf "

  if [[ -n "${CONFIG}"  &&  -f "${CONF_DIR}/${CONFIG}" ]]; then
    USED_CONFIG="${CONF_DIR}/${CONFIG}"
    EXTRA_MOUNTS="${EXTRA_MOUNTS} -v ${USED_CONFIG}:/etc/rabbitmq/rabbitmq.config:ro "
  elif [ -f "${CONF_DIR}/${CONF:-rabbitmq.conf}" ]; then
    USED_CONFIG="${CONF_DIR}/${CONF:-rabbitmq.conf}"
    EXTRA_MOUNTS="${EXTRA_MOUNTS} -v ${USED_CONFIG}:/etc/rabbitmq/rabbitmq.conf:ro "
  fi
  if [[ -n "${ADVANCED}"  && -f "${CONF_DIR}/${ADVANCED}"  ]]; then
    EXTRA_MOUNTS="${EXTRA_MOUNTS} -v ${CONF_DIR}/${ADVANCED}:/etc/rabbitmq/advanced.config:ro "
    USED_CONFIG="${USED_CONFIG} ${CONF_DIR}/${ADVANCED}"
  fi

  docker network inspect rabbitmq_net >/dev/null 2>&1 || docker network create rabbitmq_net
  docker rm -f rabbitmq 2>/dev/null || echo "rabbitmq was not running"
  echo "running RabbitMQ ($IMAGE:$IMAGE_TAG) with Idp $MODE and configuration file(s) $USED_CONFIG"
  docker run -d --name rabbitmq \
      --net rabbitmq_net \
      -p 15672:15672 \
      -p 5672:5672 \
      -p 5552:5552 \
      ${EXTRA_PORTS}\
      ${EXTRA_MOUNTS} \
      ${IMAGE}:${IMAGE_TAG}
}

deploy
wait_for_message rabbitmq "Time to start RabbitMQ"
print "RabbitMQ is running"
