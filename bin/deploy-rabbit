#!/usr/bin/env bash

#set -x

SCRIPT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $SCRIPT/common

MODE=${MODE:-uaa}
IMAGE_TAG=${IMAGE_TAG:-main}
IMAGE=${IMAGE:-pivotalrabbitmq/rabbitmq}
CONF_DIR=$SCRIPT/../conf/${MODE}
CERTS_DIR=${CONF_DIR}/certs

function generate-final-conf-dir {
  FINAL_CONF_DIR=`mktemp -d -t "oauth2"`
  if [[ -z "${CONF_FILES}" ]]; then
    for i in $CONF_DIR/*.conf
    do
      cp $i $FINAL_CONF_DIR
    done
  else
    for i in ${CONF_FILES//,/ }
    do
      cp $CONF_DIR/${i}.conf $FINAL_CONF_DIR
    done
  fi
}

function generate-tls-certs-if-required {
  if [[ -f "${CONF_DIR}/requires-tls" && ! -d "${CERTS_DIR}" ]]; then
    generate-ca-server-client-kpi rabbitmq $CERTS_DIR
    mv $CERTS_DIR/ca_certificate.pem $CERTS_DIR/cacert
    mv $CERTS_DIR/server_rabbitmq_certificate.pem $CERTS_DIR/cert.pem
    mv $CERTS_DIR/server_rabbitmq_key.pem $CERTS_DIR/key.pem
    EXTRA_PORTS="-p 15671:15671 "
    EXTRA_MOUNTS="-v ${CERTS_DIR}:/certs"        
  fi
}

function deploy {
  EXTRA_MOUNTS="${EXTRA_MOUNTS} -v ${SCRIPT}/../conf/enabled_plugins:/etc/rabbitmq/enabled_plugins "
  EXTRA_MOUNTS="${EXTRA_MOUNTS} -v ${FINAL_CONF_DIR}:/conf "
  if [[ "${MODE}" == "oauth2-proxy" ]]; then 
      EXTRA_MOUNTS="${EXTRA_MOUNTS} -v $SCRIPT/../conf/keycloak/certs:/etc/keycloak/certs "    
  fi 

  echo "running RabbitMQ ($IMAGE:$IMAGE_TAG) with Idp $MODE"
  docker run -d --name rabbitmq \
      --net rabbitmq_net \
      --env RABBITMQ_CONFIG_FILES="/conf" \
      -p 15672:15672 \
      -p 5672:5672 \
      -p 5552:5552 \
      ${EXTRA_PORTS}\
      ${EXTRA_MOUNTS} \
      ${IMAGE}:${IMAGE_TAG}
}

generate-final-conf-dir
generate-tls-certs-if-required
ensure_docker_network
kill_container_if_exist rabbitmq
deploy
wait_for_message rabbitmq "Time to start RabbitMQ"
print "RabbitMQ is running"
